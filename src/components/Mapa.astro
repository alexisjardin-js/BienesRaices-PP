---
import "leaflet/dist/leaflet.css";

interface Props {
  latitude: string;
  longitude: string;
  zoom: string;
  popupMessage: string;
  iconUrl: string;
  containerstyle?: string;
}

const { latitude, longitude, zoom, containerstyle, popupMessage, iconUrl } =
  Astro.props;
---

<leaflet-map
  data-latitude={latitude}
  data-longitude={longitude}
  data-zoom={zoom}
  data-popup={popupMessage}
  data-icon-url={iconUrl}
>
  <div id="leafletmap" style={containerstyle} class="-z-0 rounded-lg"></div>
  <script>
    import L from "leaflet";

    class LeafletMap extends HTMLElement {
      constructor() {
        super();
        const customIcon = L.icon({
          iconUrl: this.dataset.iconUrl,
          iconSize: [32, 32], // Tamaño del ícono
          iconAnchor: [16, 32], // Punto de anclaje del ícono
          popupAnchor: [0, -32], // Punto de anclaje del popup
        });

        const latlng = [this.dataset.latitude, this.dataset.longitude];
        const map = L.map("leafletmap").setView(latlng, this.dataset.zoom);
        L.tileLayer("https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png", {
          className: "map-tiles",
        }).addTo(map);
        L.marker(latlng, { icon: customIcon })
          .bindPopup(`${this.dataset.popup}`)
          .addTo(map);
      }
    }

    customElements.define("leaflet-map", LeafletMap);
  </script>
</leaflet-map>
